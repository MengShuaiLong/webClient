server {
    listen       80;
    listen       [::]:80;  # 同时监听 IPv6 地址
    server_name  html_ota.com;
    # 增加客户端请求体最大大小，支持更大文件上传
    client_max_body_size 2048m;
    # 增大客户端请求体缓冲区，配合大文件上传
    client_body_buffer_size 2048k;
    # 调整客户端头缓冲区大小
    client_header_buffer_size 1k;
    # 调整客户端大请求头缓冲区大小
    large_client_header_buffers 4 8k;

    # 防止信息泄露
    server_tokens off;

    # 减少空 referer 的攻击
    valid_referers none blocked html_ota.com;
    if ($invalid_referer) {
        return 403;
    }

    # 启用 Gzip 压缩，减少传输数据量
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # 静态文件缓存设置
    location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # API 请求转发到 Flask 后端
    location / {    
        proxy_pass http://127.0.0.1:5000/;  # Flask 运行的地址
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 优化代理连接相关设置
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;
        proxy_buffer_size 64k;
        proxy_buffers 4 32k;
        proxy_busy_buffers_size 64k;
        proxy_temp_file_write_size 64k;

        # 启用长连接，减少 TCP 握手开销
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        # 启用代理缓存
        proxy_cache my_cache;
        proxy_cache_valid 200 302 10m;
        proxy_cache_valid 404 1m;
        proxy_cache_key "$scheme$host$request_uri";
    }
}

# 在 http 块中添加缓存配置
http {
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:100m inactive=60m;
    proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
}
